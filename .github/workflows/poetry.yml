name: Python + Poetry

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run poe t
      - name: Compile tailwind files
        run: poetry run poe tw
      - name: Collect static files
        run: DJANGO_ENV=production DJANGO_DEBUG= PUBLIC_ROOT=./public/ poetry run poe cs
      - name: Generate req file
        run: poetry export -f requirements.txt --output requirements.txt
      - name: Create "new" dir on remote
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          script: |
            cd test.engajaflix.club
            mkdir -p new
      - name: Push to live site
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          source: "core/*,engajaflix/*,public/*,templates/*,manage.py,requirements.txt"
          target: "test.engajaflix.club/new"
      - name: Set correct files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          script: |
            cd test.engajaflix.club/new
            echo "" > .env
            echo "PUBLIC_ROOT=$(pwd)/public" >> .env
            echo "DJANGO_SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo "DJANGO_ENV=production" >> .env
            echo "DJANGO_DEBUG=" >> .env
            echo "DJANGO_ALLOWED_HOSTS=engajaflix.club,www.engajaflix.club" >> .env
            echo "ADMIN_URL=/admin/" >> .env
            echo "DJANGO_CSRF_TRUSTED_ORIGINS=engajaflix.club" >> .env
            echo "DJANGO_SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
            echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
            echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.SUPERUSER_USERNAME }}" >> .env
            echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
            source ../venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate --noinput
            python manage.py makesuperuser
            cd ../
            cp -r new/* .
            rm -rf new
            touch tmp/restart.txt