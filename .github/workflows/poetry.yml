name: Python + Poetry

on:
  push:
    branches: [ refactor ]
  pull_request:
    branches: [ refactor ]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      SITE_HOME: test.engajaflix.club
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run poe t
        env:
          DJANGO_SECRET_KEY: test
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Initialize tailwind dependencies
        run: npm install
      - name: Compile tailwind files
        run: poetry run poe tw
      - name: Generate req file
        run: poetry export -f requirements.txt --output ./requirements.txt
      - name: Create "new" dir on remote and install venv
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          script_stop: true
          script: |
            mkdir -p ${{ env.SITE_HOME }}/new
            cd ${{ env.SITE_HOME }}
            [[ -d venv ]] || ./../opt/python-3.11.0/bin/python3 -m venv venv
      - name: Push to live site
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          source: "core/*,engajaflix_club/*,templates/*,static/*,manage.py,requirements.txt"
          target: "${{ env.SITE_HOME }}/new"
      - name: Set correct files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          timeout: 1m
          script_stop: true
          script: |
            cd ${{ env.SITE_HOME }}/new
            echo "" > .env
            echo "PUBLIC_ROOT=/home/${{ secrets.SERVER_USER }}/${{ env.SITE_HOME }}/public" >> .env
            echo "DJANGO_SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo "DJANGO_ENV=production" >> .env
            echo "DJANGO_DEBUG=" >> .env
            echo "DJANGO_ALLOWED_HOSTS=${{ env.SITE_HOME }},www.${{ env.SITE_HOME }}" >> .env
            echo "DJANGO_CSRF_TRUSTED_ORIGINS=https://${{ env.SITE_HOME }}" >> .env
            echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.SUPERUSER_USERNAME }}" >> .env
            echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
            echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
            echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
            echo "ADMIN_URL=/admin/" >> .env
            echo "DATABASE_URL=${{ secrets.REFACTOR_DATABASE_URL }}" >> .env
            source ../venv/bin/activate
            pip install -r requirements.txt
            python manage.py collectstatic --noinput
            python manage.py migrate --noinput
            python manage.py makesuperuser
            cd ../
            tar --exclude={'*.pyc','__pycache__'} -czf old.tar.gz app/.
            rm -rf app/
            mv new/ app/
            echo "" > passenger_wsgi.py
            echo "import sys, os" >> passenger_wsgi.py
            echo "cwd = os.getcwd()" >> passenger_wsgi.py
            echo 'sys.path.append(cwd + "/")' >> passenger_wsgi.py
            echo 'sys.path.append(cwd + "/app")' >> passenger_wsgi.py
            echo 'INTERP = "/home/${{ secrets.SERVER_USER }}/${{ env.SITE_HOME }}/venv/bin/python3"' >> passenger_wsgi.py
            echo "if sys.executable != INTERP: os.execl(INTERP, INTERP, *sys.argv)" >> passenger_wsgi.py
            echo "sys.path.insert(0, os.path.join(cwd, 'venv', 'bin'))" >> passenger_wsgi.py
            echo "sys.path.insert(0, os.path.join(cwd, 'venv', 'lib', 'python3.11', 'site-packages'))" >> passenger_wsgi.py
            echo 'os.environ["DJANGO_SETTINGS_MODULE"] = "engajaflix_club.settings"' >> passenger_wsgi.py
            echo "from django.core.wsgi import get_wsgi_application" >> passenger_wsgi.py
            echo "application = get_wsgi_application()" >> passenger_wsgi.py
            touch tmp/restart.txt